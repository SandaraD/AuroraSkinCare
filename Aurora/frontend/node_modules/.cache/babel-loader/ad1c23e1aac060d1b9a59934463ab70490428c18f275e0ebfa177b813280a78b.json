{"ast":null,"code":"import axios from 'axios';\nconst BASE_URL = 'http://localhost:8080/api/appointments';\n\n// Function to get appointments by date\nconst getAppointmentsByDate = date => {\n  return axios.get(`${BASE_URL}/date/${date}`);\n};\n\n// Function to get appointments by time\nconst getAppointmentsByTime = time => {\n  return axios.get(`${BASE_URL}/time/${time}`);\n};\n\n// Function to search appointments by name or ID\nconst searchAppointments = searchTerm => {\n  return axios.get(`${BASE_URL}/search?term=${searchTerm}`);\n};\n\n// Function to check appointment availability\nexport const checkAppointmentAvailability = async (dermatologist, date, time) => {\n  try {\n    const response = await axios.get(`${BASE_URL}/check-availability`, {\n      params: {\n        dermatologist,\n        date,\n        time\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error(\"Error checking availability\", error);\n    throw error;\n  }\n};\n\n// Function to create a new appointment\nexport const createAppointment = async appointmentData => {\n  try {\n    const response = await axios.post(BASE_URL, appointmentData);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error creating appointment\", error);\n    throw error;\n  }\n};\nexport { getAppointmentsByDate, getAppointmentsByTime, searchAppointments };","map":{"version":3,"names":["axios","BASE_URL","getAppointmentsByDate","date","get","getAppointmentsByTime","time","searchAppointments","searchTerm","checkAppointmentAvailability","dermatologist","response","params","data","error","console","createAppointment","appointmentData","post"],"sources":["/Users/sandaradewmini/Documents/Kingston Coursework/Programming 3/Aurora/frontend/src/api/AppointmentService.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'http://localhost:8080/api/appointments';\n\n// Function to get appointments by date\nconst getAppointmentsByDate = (date) => {\n    return axios.get(`${BASE_URL}/date/${date}`);\n};\n\n// Function to get appointments by time\nconst getAppointmentsByTime = (time) => {\n    return axios.get(`${BASE_URL}/time/${time}`);\n};\n\n// Function to search appointments by name or ID\nconst searchAppointments = (searchTerm) => {\n    return axios.get(`${BASE_URL}/search?term=${searchTerm}`);\n};\n\n// Function to check appointment availability\nexport const checkAppointmentAvailability = async (dermatologist, date, time) => {\n    try {\n        const response = await axios.get(`${BASE_URL}/check-availability`, {\n            params: { dermatologist, date, time }\n        });\n        return response.data;\n    } catch (error) {\n        console.error(\"Error checking availability\", error);\n        throw error;\n    }\n};\n\n// Function to create a new appointment\nexport const createAppointment = async (appointmentData) => {\n    try {\n        const response = await axios.post(BASE_URL, appointmentData);\n        return response.data;\n    } catch (error) {\n        console.error(\"Error creating appointment\", error);\n        throw error;\n    }\n};\n\n\nexport { getAppointmentsByDate, getAppointmentsByTime, searchAppointments };\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,QAAQ,GAAG,wCAAwC;;AAEzD;AACA,MAAMC,qBAAqB,GAAIC,IAAI,IAAK;EACpC,OAAOH,KAAK,CAACI,GAAG,CAAC,GAAGH,QAAQ,SAASE,IAAI,EAAE,CAAC;AAChD,CAAC;;AAED;AACA,MAAME,qBAAqB,GAAIC,IAAI,IAAK;EACpC,OAAON,KAAK,CAACI,GAAG,CAAC,GAAGH,QAAQ,SAASK,IAAI,EAAE,CAAC;AAChD,CAAC;;AAED;AACA,MAAMC,kBAAkB,GAAIC,UAAU,IAAK;EACvC,OAAOR,KAAK,CAACI,GAAG,CAAC,GAAGH,QAAQ,gBAAgBO,UAAU,EAAE,CAAC;AAC7D,CAAC;;AAED;AACA,OAAO,MAAMC,4BAA4B,GAAG,MAAAA,CAAOC,aAAa,EAAEP,IAAI,EAAEG,IAAI,KAAK;EAC7E,IAAI;IACA,MAAMK,QAAQ,GAAG,MAAMX,KAAK,CAACI,GAAG,CAAC,GAAGH,QAAQ,qBAAqB,EAAE;MAC/DW,MAAM,EAAE;QAAEF,aAAa;QAAEP,IAAI;QAAEG;MAAK;IACxC,CAAC,CAAC;IACF,OAAOK,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACnD,MAAMA,KAAK;EACf;AACJ,CAAC;;AAED;AACA,OAAO,MAAME,iBAAiB,GAAG,MAAOC,eAAe,IAAK;EACxD,IAAI;IACA,MAAMN,QAAQ,GAAG,MAAMX,KAAK,CAACkB,IAAI,CAACjB,QAAQ,EAAEgB,eAAe,CAAC;IAC5D,OAAON,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IAClD,MAAMA,KAAK;EACf;AACJ,CAAC;AAGD,SAASZ,qBAAqB,EAAEG,qBAAqB,EAAEE,kBAAkB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}